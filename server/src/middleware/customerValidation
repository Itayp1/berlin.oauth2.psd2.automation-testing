const Ajv = require('ajv');
var ajv = new Ajv({ schemaId: 'id', allErrors: true });
var metaSchema = require('ajv/lib/refs/json-schema-draft-04.json');
ajv.addMetaSchema(metaSchema);
const customerSchema = require('../schema/customer.json');
const updateCustomerSchema = require('../schema/updateCustomer.json');
const logger = require('../loaders/logger');

const createCustomerValidation = async (req, res, next) => {
  const { body } = req;
  try {
    const validate = ajv.compile(customerSchema);
    const valid = validate(body);
    if (!valid) {
      logger.error('invalid request');
      return res.status(400).json(validate.errors);
    }

    next();
  } catch (error) {
    next(error);
  }
};

const updateCustomerValidation = async (req, res, next) => {
  const logger = require('../loaders/logger');

  const { body } = req;
  try {
    const validate = ajv.compile(updateCustomerSchema);
    const valid = validate(body);
    if (!valid) {
      logger.error('invalid request');
      return res.status(400).json(validate.errors);
    }

    next();
  } catch (error) {
    next(error);
  }
};

module.exports = {
  createCustomerValidation,
  updateCustomerValidation,
};
